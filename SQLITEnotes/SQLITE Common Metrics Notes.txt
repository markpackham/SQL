Common Metrics examples


Daily Revenue factoring in refunds

select
  date(created_at),
  round(sum(price), 2) as daily_rev
from purchases
where refunded_at is not null
group by 1
order by 1;



Daily Active Users
DAU is defined as the number of unique players seen in-game each day. It’s important not to double count users who played multiple times, 
so we’ll use distinct in our count function.
Likewise, Weekly Active Users (WAU) and Monthly Active Users (MAU) are in the same family.

select
  date(created_at), 
  count(distinct user_id) as dau
from gameplays
group by 1
order by 1;



Daily active users per partner

select
  date(created_at), 
  platform,
  count(distinct user_id) as dau
from gameplays
group by 1, 2
order by 1, 2;



Daily Average Revenue Per Purchasing User
Mineblocks, like every freemium game, has two types of users:
purchasers: users who have bought things in the game
players: users who play the game but have not yet purchased

select
  date(created_at),
  round(sum(price) / count(distinct user_id), 2) as arppu
from purchases
where refunded_at is null
group by 1
order by 1;



Daily ARPU is defined as revenue divided by the number of players, per-day. 
To get that, we’ll need to calculate the daily revenue and daily active users separately, and then join them on their dates.
One way to easily create and organize temporary results in a query is with CTEs, Common Table Expressions, 
also known as with clauses. The with clauses make it easy to define and use results in a more organized way than subqueries.

with daily_revenue as (
  select
    date(created_at) as dt,
    round(sum(price), 2) as rev
  from purchases
  where refunded_at is null
  group by 1
), 
daily_players as (
  select
    date(created_at) as dt,
    count(distinct user_id) as players
  from gameplays
  group by 1
)
select
  daily_revenue.dt,
  daily_revenue.rev / daily_players.players
from daily_revenue
  join daily_players using (dt);




1 Day Retention

1 Day Retention is defined as the number of players who returned the next day divided by the number of original players, per day. 
Suppose 10 players played Mineblocks on Dec 10th. If 4 of them play on Dec 11th, the 1 day retention for Dec 10th is 40%.

select
  date(g1.created_at) as dt,
  round(100 * count(distinct g2.user_id) /
    count(distinct g1.user_id)) as retention
from gameplays as g1
  left join gameplays as g2 on
    g1.user_id = g2.user_id
    and date(g1.created_at) = date(datetime(g2.created_at, '-1 day'))
group by 1
order by 1
limit 100;



Summary

Key Performance Indicators are high level health metrics for a business.
Daily Revenue is the sum of money made per day.
Daily Active Users are the number of unique users seen each day
Daily Average Revenue Per Purchasing User (ARPPU) is the average amount of money spent by purchasers each day.
Daily Average Revenue Per User (ARPU) is the average amount of money across all users.
1 Day Retention is defined as the number of players from Day N who came back to play again on Day N+1.